{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","allPages","Math","ceil","handleSetPage","event","preventDefault","page","Number","currentTarget","dataset","className","cn","disabled","href","onClick","map","active","items","App","useState","itemsPerPage","setItemsPerPage","setPage","first","last","min","length","id","value","onChange","target","htmlFor","newPage","slice","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAE7BM,EAAgB,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,EAAOC,OAAOH,EAAMI,cAAcC,QAAQX,aAE5CQ,EAAO,GAAKA,IAASR,GAAeQ,EAAON,GAI/CD,EAAaO,IAGf,OACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBd,IAFd,SAKE,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBf,EACf,oBAAmBA,EAAc,EACjCgB,QAASX,EANX,oBAYDd,EAAW,EAAGW,GAAUe,KAAI,SAACT,GAAD,OAC3B,oBACEI,UAAWC,IACT,YACA,CAAEK,OAAQV,IAASR,IAHvB,SAME,mBACE,UAAQ,WACRY,UAAU,YACV,oBAAmBJ,EACnBO,KAAI,WAAMP,GACVQ,QAASX,EALX,SAOGG,SAKP,oBAAII,UAAWC,IACb,YACA,CAAEC,SAAUd,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAK,QACL,gBAAef,IAAgBE,EAC/B,oBAAmBF,EAAc,EACjCgB,QAASX,EANX,wBCpEFc,EAAkB5B,EAAW,EAAG,IACnC0B,KAAI,SAAAtB,GAAC,qBAAYA,MAEPyB,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwBF,mBAAS,GAAjC,mBAAOb,EAAP,KAAagB,EAAb,KAEMC,GAASjB,EAAO,GAAKc,EAAe,EACpCI,EAAOvB,KAAKwB,IAAInB,EAAOc,EAAcH,EAAMS,QAMjD,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWJ,EADX,mBAC0BiB,EAD1B,cACqCC,EADrC,eACgDP,EAAMS,OADtD,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAOR,EACPS,SAAU,SAACzB,GACTiB,GAAiBjB,EAAM0B,OAAOF,OAC9BN,EAAQ,IAPZ,UAUE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOG,QAAQ,kBAAkBrB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEd,MAAOqB,EAAMS,OACb7B,QAASuB,EACTtB,YAAaQ,EACbP,aAxCmB,SAACiC,GACxBV,EAAQU,MA0CN,6BACGf,EAAMgB,MAAMV,EAAQ,EAAGC,GAAMT,KAAI,SAAAmB,GAAI,OACpC,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC3DjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ded7463d.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const allPages = Math.ceil(total / perPage);\n\n  const handleSetPage = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n\n    const page = Number(event.currentTarget.dataset.currentPage);\n\n    if (page < 1 || page === currentPage || page > allPages) {\n      return;\n    }\n\n    onPageChange(page);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn(\n        'page-item',\n        { disabled: currentPage === 1 },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          data-current-page={currentPage - 1}\n          onClick={handleSetPage}\n        >\n          «\n        </a>\n      </li>\n\n      {getNumbers(1, allPages).map((page) => (\n        <li\n          className={cn(\n            'page-item',\n            { active: page === currentPage },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            data-current-page={page}\n            href={`#${page}`}\n            onClick={handleSetPage}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn(\n        'page-item',\n        { disabled: currentPage === allPages },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === allPages}\n          data-current-page={currentPage + 1}\n          onClick={handleSetPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items: string[] = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [page, setPage] = useState(1);\n\n  const first = (page - 1) * itemsPerPage + 1;\n  const last = Math.min(page * itemsPerPage, items.length);\n\n  const handlePageChange = (newPage: number) => {\n    setPage(newPage);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${first} - ${last} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => {\n              setItemsPerPage(+event.target.value);\n              setPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={itemsPerPage}\n        currentPage={page}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {items.slice(first - 1, last).map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}